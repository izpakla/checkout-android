/*
 *
 *   Copyright (c) 2022 Payoneer Germany GmbH
 *   https://www.payoneer.com
 *
 *   This file is open source and available under the MIT license.
 *   See the LICENSE file for more information.
 *
 */

package com.payoneer.checkout.risk;

import java.util.HashMap;
import java.util.Map;

/**
 * This class is used to store internal and external errors generated by a risk provider.
 */
class RiskProviderErrors {

    private static final String RESULTKEY_EXTERNAL_ERROR = "riskPluginExternalError";
    private static final String RESULTKEY_INTERNAL_ERROR = "riskPluginInternalError";
    private final Map<String, String> errors;

    RiskProviderErrors() {
        this.errors = new HashMap<>();
    }

    Map<String, String> getErrors() {
        return errors;
    }

    void putInternalError(final String value) {
        errors.put(RESULTKEY_INTERNAL_ERROR, trimValue(value));
    }

    void putExternalError(final String value) {
        errors.put(RESULTKEY_EXTERNAL_ERROR, trimValue(value));
    }

    private String trimValue(final String message) {
        if (message.length() > 2000) {
            return message.substring(0, 2000);
        } else {
            return message;
        }
    }
}
