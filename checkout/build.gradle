apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

assemble.dependsOn('lint')

android {
    lintOptions {
        abortOnError true
        checkDependencies true
        ignoreWarnings true
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    compileOptions {
        sourceCompatibility rootProject.javaCompatVersion
        targetCompatibility rootProject.javaCompatVersion
    }

    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        buildConfigField('int', 'VERSION_CODE', "${rootProject.versionCode}")
        buildConfigField('String', 'VERSION_NAME', "\"${rootProject.versionName}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
        }
        libraryVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "PayoneerCheckout_${variant.name}_${versionName}.aar"
            }
        }
        applicationVariants {
        }
    }
}

dependencies {
    implementation "com.google.android.material:material:${rootProject.androidMaterialVersion}"
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
    implementation "androidx.browser:browser:${rootProject.androidxBrowserVersion}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootProject.androidxSwiperefreshlayoutVersion}"
    implementation "androidx.test.espresso:espresso-idling-resource:${rootProject.androidxTestEspressoVersion}@aar"
    //implementation "com.google.android.gms:play-services-wallet:16.0.1"
    implementation "com.braintreepayments.api:google-pay:4.+"
    //implementation 'com.braintreepayments.api:braintree:4.+'
    //implementation 'com.braintreepayments.api:google-payment:4.+'

    testImplementation "org.robolectric:robolectric:${rootProject.robolectricVersion}"
    testImplementation "androidx.test:core:${rootProject.androidxTestCoreVersion}"
    testImplementation "junit:junit:${rootProject.junitVersion}"
    testImplementation "com.tngtech.junit.dataprovider:junit4-dataprovider:${tngDataProviderVersion}"
    testImplementation "io.github.json-snapshot:json-snapshot:${rootProject.jsonsnapshotVersion}"
}

// import the script for publishing release builds to Nexus and Packagecloud
apply from: 'publish.gradle'
