// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'version.gradle'
apply from: 'browserstack.gradle'

buildscript {
    repositories {
        google()
        // Required for Browserstack gradle plugin
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenCentral()
    }

    dependencies {
        classpath localGroovy()
        classpath 'gradle.plugin.com.browserstack.gradle:browserstack-gradle-plugin:3.0.4'
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.41"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // Uncomment to see details deprecation warnings
            //options.compilerArgs.add("-Xlint:deprecation")
        }
    }
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

task clean(type: Delete) {
    dependsOn(":checkout:clean")
    dependsOn(":example-checkout:clean")
    dependsOn(":example-shop:clean")
    dependsOn(":shared-test:clean")
    dependsOn(":riskprovider:iovation:clean")
}

ext {
    versionCode = getVersionCode()
    versionName = getVersionName()
    javaCompatVersion = JavaVersion.VERSION_1_8

    nexusUser = System.getenv('NEXUS_USER')
    nexusPassword = System.getenv('NEXUS_PASSWORD')
    packageCloudToken = System.getenv('PACKAGECLOUD_TOKEN')
    browserStackUser = System.getenv('BROWSERSTACK_USER')
    browserStackKey = System.getenv('BROWSERSTACK_KEY')

    merchantCode = System.getenv('MOBILE_MERCHANT_CODE')
    merchantPaymentToken = System.getenv('MOBILE_MERCHANT_PAYMENT_TOKEN')
    paymentApiListUrl = System.getenv('PAYMENTAPI_LISTURL')

    playstoreStoreFile = System.getenv('PLAYSTORE_UPLOAD_STOREFILE')
    playstoreStorePassword = System.getenv('PLAYSTORE_UPLOAD_STOREPASSWORD')
    playstoreKeyAlias = System.getenv('PLAYSTORE_UPLOAD_KEYALIAS')
    playstoreKeyPassword = System.getenv('PLAYSTORE_UPLOAD_KEYPASSWORD')

    minSdkVersion = 21
    compileSdkVersion = 31
    targetSdkVersion = 31

    activityVersion = '1.4.0'
    lifecycleVersion = '2.4.1'
    hiltVersion = '2.41'
    coreKtxVersion = '1.7.0'
    gsonVersion = '2.9.0'

    // Java language implementation
    androidMaterialVersion = '1.5.0'
    androidxFragmentVersion = '1.4.1'
    androidxBrowserVersion = '1.4.0'
    androidxSwiperefreshlayoutVersion = '1.1.0'
    androidxTestCoreVersion = '1.4.0'
    androidxTestRunnerVersion = '1.4.0'
    androidxTestRulesVersion = '1.4.0'
    androidxTestEspressoVersion = '3.4.0'
    androidxTestJunitVersion = '1.1.3'
    androidxTestUIAutomatorVersion = '2.2.0'

    junitVersion = '4.13.2'
    rxjavaVersion = '3.1.4'
    rxandroidVersion = '3.0.0'
    mockitoCoreVersion = '2.23.4'
    robolectricVersion = '4.8.1'
    jsonsnapshotVersion = '1.0.17'
    tngDataProviderVersion = '2.9'
}

static def getBranchName() {
    // Get branch name for pull requests
    def gitHeadRef = System.getenv('GITHUB_HEAD_REF')
    if ((gitHeadRef != null) && (gitHeadRef.length() > 0)) {
        return gitHeadRef
    }
    // get branch name for push
    def branch = ''
    def proc = 'git rev-parse --abbrev-ref HEAD'.execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

static def getBranchLabel() {
    return getBranchName().replace('[^A-Za-z0-9]', '-')
}

apply from: 'ci.gradle'