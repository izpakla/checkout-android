apply plugin: "com.android.library"
apply plugin: "maven-publish"

assemble.dependsOn('lint')

configurations {
    deployerJars
}
repositories {
    gradlePluginPortal()
}


android {
    lintOptions {
        abortOnError true
        checkDependencies true
        ignoreWarnings true
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    compileOptions {
        sourceCompatibility rootProject.javaCompatVersion
        targetCompatibility rootProject.javaCompatVersion
    }

    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName = rootProject.versionName
        versionCode = rootProject.versionCode
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("int", "VERSION_CODE", "${versionCode}")
        buildConfigField("String", "VERSION_NAME", "\"${versionName}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }

        libraryVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "PayoneerCheckout_${variant.name}_${defaultConfig.versionName}.aar"
            }
        }
        applicationVariants {
        }
    }
}

dependencies {
    implementation "com.google.android.material:material:${rootProject.androidMaterialVersion}"
    implementation "androidx.browser:browser:${rootProject.androidxBrowserVersion}"
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootProject.androidxSwiperefreshlayoutVersion}"
    implementation "androidx.test.espresso:espresso-idling-resource:${rootProject.androidxTestEspressoVersion}@aar"

    compileOnly "org.projectlombok:lombok:${rootProject.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.lombokVersion}"

    implementation("com.github.bumptech.glide:glide:${rootProject.bumptechGlideVersion}") {
        exclude group: "com.android.support"
    }
    testImplementation "io.github.json-snapshot:json-snapshot:${rootProject.jsonsnapshotVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.mockitoCoreVersion}"
    testImplementation "org.robolectric:robolectric:${rootProject.robolectricVersion}"
    testImplementation "androidx.test:core:${rootProject.androidxTestCoreVersion}"
    testImplementation "androidx.test.ext:junit:${rootProject.androidxTestJunitVersion}"
    testImplementation "org.hamcrest:hamcrest-library:${rootProject.harmcrestVersion}"
    testImplementation "com.tngtech.junit.dataprovider:junit4-dataprovider:${tngDataProviderVersion}"

    androidTestImplementation "androidx.test.ext:junit:${rootProject.androidxTestJunitVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.androidxTestRunnerVersion}"
    androidTestImplementation "androidx.test:rules:${rootProject.androidxTestRulesVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.androidxTestEspressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${rootProject.androidxTestEspressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${rootProject.androidxTestEspressoVersion}"

    deployerJars "io.packagecloud.maven.wagon:maven-packagecloud-wagon:${rootProject.packagecloudWagonVersion}"
}

afterEvaluate {
    publishing {
        publications {
            // Publish release to packagecloud
            packagecloud(MavenPublication) {
                from components.release
                groupId = 'com.payoneer'
                artifactId = 'checkout-android'
                version = versionName
            }
        }
        repositories {
            maven {
                url = "https://packagecloud.io/optile/test/java/maven2/"
                credentials {
                    username = packageCloudMavenPassword
                    password = ""
                }
            }
        }
    }
}


