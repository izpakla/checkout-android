/*
 * Gradle file containing the tasks to build, test and publish the Android Checkout SDK
 * from a CI system
 */

task buildCheckout() {
    dependsOn ':checkout:assembleRelease'
}

task testCheckout() {
    dependsOn ':checkout:test'
}

task publishCheckoutSnapshotVersion() {
    dependsOn ':checkout:publishSnapshotVersion'
}

task publishCheckoutReleaseVersion() {
    dependsOn ':checkout:publishReleaseVersion'
}

task buildPaymentServices() {
    dependsOn ':paymentservice:googlepay-braintree:assembleRelease'
}

task testPaymentServices() {
    dependsOn ':paymentservice:googlepay-braintree:test'
}

task publishPaymentServicesSnapshotVersion() {
    dependsOn ':paymentservice:googlepay-braintree:publishSnapshotVersion'
}

task publishPaymentServicesReleaseVersion() {
    dependsOn ':paymentservice:googlepay-braintree:publishReleaseVersion'
}

task buildRiskProviders() {
    dependsOn ':riskprovider:iovation:assembleRelease'
}

task testRiskProviders() {
    dependsOn ':riskprovider:iovation:test'
}

task publishRiskProvidersSnapshotVersion() {
    dependsOn ':riskprovider:iovation:publishSnapshotVersion'
}

task publishRiskProvidersReleaseVersion() {
    dependsOn ':riskprovider:iovation:publishReleaseVersion'
}

task uploadExampleAppsToAppLive() {
    dependsOn 'uploadExampleCheckoutToAppLive'
    dependsOn 'uploadExampleShopToAppLive'
}

task uploadExampleCheckoutToAppLive() {
    def deleteFromAppLive = tasks.findByPath(':example-checkout:deleteFromAppLive')
    def uploadToAppLive = tasks.findByPath(':example-checkout:uploadToAppLive')
    dependsOn deleteFromAppLive
    dependsOn uploadToAppLive
    uploadToAppLive.mustRunAfter(deleteFromAppLive)
}

task uploadExampleShopToAppLive() {
    def deleteFromAppLive = tasks.findByPath(':example-shop:deleteFromAppLive')
    def uploadToAppLive = tasks.findByPath(':example-shop:uploadToAppLive')
    dependsOn deleteFromAppLive
    dependsOn uploadToAppLive
    uploadToAppLive.mustRunAfter(deleteFromAppLive)
}

task testExampleCheckoutOnAppAutomate() {
    dependsOn ':example-checkout:testOnAppAutomate'
}

task testExampleShopOnAppAutomate() {
    dependsOn ':example-shop:testOnAppAutomate'
}

task testExampleAppsOnAppAutomate() {
    def testExampleCheckout = tasks.findByPath(':example-checkout:testOnAppAutomate')
    def testExampleShop = tasks.findByPath(':example-shop:testOnAppAutomate')
    dependsOn testExampleCheckout
    dependsOn testExampleShop
    testExampleShop.mustRunAfter(testExampleCheckout)
}